{"ast":null,"code":"!function (globals) {\n  'use strict';\n\n  var convertHex = {\n    bytesToHex: function (bytes) {\n      /*if (typeof bytes.byteLength != 'undefined') {\n        var newBytes = []\n         if (typeof bytes.buffer != 'undefined')\n          bytes = new DataView(bytes.buffer)\n        else\n          bytes = new DataView(bytes)\n         for (var i = 0; i < bytes.byteLength; ++i) {\n          newBytes.push(bytes.getUint8(i))\n        }\n        bytes = newBytes\n      }*/\n      return arrBytesToHex(bytes);\n    },\n    hexToBytes: function (hex) {\n      if (hex.length % 2 === 1) throw new Error(\"hexToBytes can't have a string with an odd number of characters.\");\n      if (hex.indexOf('0x') === 0) hex = hex.slice(2);\n      return hex.match(/../g).map(function (x) {\n        return parseInt(x, 16);\n      });\n    } // PRIVATE\n\n  };\n\n  function arrBytesToHex(bytes) {\n    return bytes.map(function (x) {\n      return padLeft(x.toString(16), 2);\n    }).join('');\n  }\n\n  function padLeft(orig, len) {\n    if (orig.length > len) return orig;\n    return Array(len - orig.length + 1).join('0') + orig;\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    //CommonJS\n    module.exports = convertHex;\n  } else {\n    globals.convertHex = convertHex;\n  }\n}(this);","map":null,"metadata":{},"sourceType":"script"}